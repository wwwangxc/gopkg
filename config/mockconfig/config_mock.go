// Code generated by MockGen. DO NOT EDIT.
// Source: config.go

// Package mockconfig is a generated GoMock package.
package mockconfig

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockConfigure is a mock of Configure interface
type MockConfigure struct {
	ctrl     *gomock.Controller
	recorder *MockConfigureMockRecorder
}

// MockConfigureMockRecorder is the mock recorder for MockConfigure
type MockConfigureMockRecorder struct {
	mock *MockConfigure
}

// NewMockConfigure creates a new mock instance
func NewMockConfigure(ctrl *gomock.Controller) *MockConfigure {
	mock := &MockConfigure{ctrl: ctrl}
	mock.recorder = &MockConfigureMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockConfigure) EXPECT() *MockConfigureMockRecorder {
	return m.recorder
}

// Unmarshal mocks base method
func (m *MockConfigure) Unmarshal(arg0 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Unmarshal", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Unmarshal indicates an expected call of Unmarshal
func (mr *MockConfigureMockRecorder) Unmarshal(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Unmarshal", reflect.TypeOf((*MockConfigure)(nil).Unmarshal), arg0)
}

// IsExist mocks base method
func (m *MockConfigure) IsExist(arg0 string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsExist", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsExist indicates an expected call of IsExist
func (mr *MockConfigureMockRecorder) IsExist(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsExist", reflect.TypeOf((*MockConfigure)(nil).IsExist), arg0)
}

// Get mocks base method
func (m *MockConfigure) Get(arg0 string, arg1 interface{}) interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(interface{})
	return ret0
}

// Get indicates an expected call of Get
func (mr *MockConfigureMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockConfigure)(nil).Get), arg0, arg1)
}

// GetString mocks base method
func (m *MockConfigure) GetString(arg0, arg1 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetString", arg0, arg1)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetString indicates an expected call of GetString
func (mr *MockConfigureMockRecorder) GetString(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetString", reflect.TypeOf((*MockConfigure)(nil).GetString), arg0, arg1)
}

// GetBool mocks base method
func (m *MockConfigure) GetBool(arg0 string, arg1 bool) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBool", arg0, arg1)
	ret0, _ := ret[0].(bool)
	return ret0
}

// GetBool indicates an expected call of GetBool
func (mr *MockConfigureMockRecorder) GetBool(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBool", reflect.TypeOf((*MockConfigure)(nil).GetBool), arg0, arg1)
}

// GetInt mocks base method
func (m *MockConfigure) GetInt(arg0 string, arg1 int) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInt", arg0, arg1)
	ret0, _ := ret[0].(int)
	return ret0
}

// GetInt indicates an expected call of GetInt
func (mr *MockConfigureMockRecorder) GetInt(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInt", reflect.TypeOf((*MockConfigure)(nil).GetInt), arg0, arg1)
}

// GetInt32 mocks base method
func (m *MockConfigure) GetInt32(arg0 string, arg1 int32) int32 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInt32", arg0, arg1)
	ret0, _ := ret[0].(int32)
	return ret0
}

// GetInt32 indicates an expected call of GetInt32
func (mr *MockConfigureMockRecorder) GetInt32(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInt32", reflect.TypeOf((*MockConfigure)(nil).GetInt32), arg0, arg1)
}

// GetInt64 mocks base method
func (m *MockConfigure) GetInt64(arg0 string, arg1 int64) int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInt64", arg0, arg1)
	ret0, _ := ret[0].(int64)
	return ret0
}

// GetInt64 indicates an expected call of GetInt64
func (mr *MockConfigureMockRecorder) GetInt64(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInt64", reflect.TypeOf((*MockConfigure)(nil).GetInt64), arg0, arg1)
}

// GetUint mocks base method
func (m *MockConfigure) GetUint(arg0 string, arg1 uint) uint {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUint", arg0, arg1)
	ret0, _ := ret[0].(uint)
	return ret0
}

// GetUint indicates an expected call of GetUint
func (mr *MockConfigureMockRecorder) GetUint(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUint", reflect.TypeOf((*MockConfigure)(nil).GetUint), arg0, arg1)
}

// GetUint32 mocks base method
func (m *MockConfigure) GetUint32(arg0 string, arg1 uint32) uint32 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUint32", arg0, arg1)
	ret0, _ := ret[0].(uint32)
	return ret0
}

// GetUint32 indicates an expected call of GetUint32
func (mr *MockConfigureMockRecorder) GetUint32(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUint32", reflect.TypeOf((*MockConfigure)(nil).GetUint32), arg0, arg1)
}

// GetUint64 mocks base method
func (m *MockConfigure) GetUint64(arg0 string, arg1 uint64) uint64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUint64", arg0, arg1)
	ret0, _ := ret[0].(uint64)
	return ret0
}

// GetUint64 indicates an expected call of GetUint64
func (mr *MockConfigureMockRecorder) GetUint64(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUint64", reflect.TypeOf((*MockConfigure)(nil).GetUint64), arg0, arg1)
}

// GetFloat32 mocks base method
func (m *MockConfigure) GetFloat32(arg0 string, arg1 float32) float32 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFloat32", arg0, arg1)
	ret0, _ := ret[0].(float32)
	return ret0
}

// GetFloat32 indicates an expected call of GetFloat32
func (mr *MockConfigureMockRecorder) GetFloat32(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFloat32", reflect.TypeOf((*MockConfigure)(nil).GetFloat32), arg0, arg1)
}

// GetFloat64 mocks base method
func (m *MockConfigure) GetFloat64(arg0 string, arg1 float64) float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFloat64", arg0, arg1)
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetFloat64 indicates an expected call of GetFloat64
func (mr *MockConfigureMockRecorder) GetFloat64(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFloat64", reflect.TypeOf((*MockConfigure)(nil).GetFloat64), arg0, arg1)
}
